{"version":3,"sources":["pages/content/Content.js"],"names":["connect","state","contentID","content","contentId","dispatch","setLoader","value","multilanguage","strings","useState","contentDetails","setContentDetail","useEffect","getContent","a","action","constant","ACTION","CONTENT","PAGES","WebService","get","response","title","name","metaDetails","to","headerContainerClass","headerPaddingClass","headerTop","className","dangerouslySetInnerHTML","__html","pageContent"],"mappings":"gQA4EeA,6BAdS,SAACC,GACrB,MAAO,CACHC,UAAWD,EAAME,QAAQC,cAGN,SAAAC,GAEvB,MAAO,CACHC,UAAW,SAACC,GACRF,EAASC,YAAUC,QAKhBP,CAA6CQ,yBAhE5C,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASP,EAA2B,EAA3BA,UAAWI,EAAgB,EAAhBA,UAEnC,EAA2CI,mBAAS,IAApD,mBAAOC,EAAP,KAAuBC,EAAvB,KACAC,qBAAU,WACNC,MAED,IAEH,IAAMA,EAAU,uCAAG,8BAAAC,EAAA,6DACfT,GAAU,GACNU,EAASC,IAASC,OAAOC,QAAUF,IAASC,OAAOE,MAAQlB,EAFhD,kBAIUmB,IAAWC,IAAIN,GAJzB,QAIPO,EAJO,SAOPX,EAAiBW,GAErBjB,GAAU,GATC,kDAWXA,GAAU,GAXC,0DAAH,qDAchB,OACI,eAAC,WAAD,WACI,eAAC,IAAD,WACI,gCAAQK,EAAea,QACvB,sBACIC,KAAK,cACLtB,QAASQ,EAAee,iBAIhC,cAAC,kBAAD,CAAiBC,GAAG,IAApB,SAAyBlB,EAAO,OAChC,eAAC,kBAAD,CAAiBkB,GAAG,WAApB,UAAgChB,EAAec,KAA/C,OAEA,eAAC,IAAD,CAAQG,qBAAqB,kBACzBC,mBAAmB,mBACnBC,UAAU,UAFd,UAII,cAAC,IAAD,IACA,qBAAKC,UAAU,8BAAf,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGC,wBAAyB,CAAEC,OAAQtB,EAAeuB","file":"static/js/18.3cc53977.chunk.js","sourcesContent":["\nimport React, { useEffect, Fragment, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport WebService from '../../util/webService';\nimport constant from '../../util/constant';\nimport { setLoader } from \"../../redux/actions/loaderActions\";\nimport Layout from \"../../layouts/Layout\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport { connect } from 'react-redux';\nimport { multilanguage } from \"redux-multilanguage\";\n\nconst Content = ({ strings, contentID, setLoader }) => {\n\n    const [contentDetails, setContentDetail] = useState('');\n    useEffect(() => {\n        getContent();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const getContent = async () => {\n        setLoader(true)\n        let action = constant.ACTION.CONTENT + constant.ACTION.PAGES + contentID;\n        try {\n            let response = await WebService.get(action);\n            if (response) {\n                // console.log(response)\n                setContentDetail(response)\n            }\n            setLoader(false)\n        } catch (error) {\n            setLoader(false)\n        }\n    }\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>{contentDetails.title}</title>\n                <meta\n                    name=\"description\"\n                    content={contentDetails.metaDetails}\n                />\n            </MetaTags>\n\n            <BreadcrumbsItem to=\"/\">{strings[\"Home\"]}</BreadcrumbsItem>\n            <BreadcrumbsItem to=\"/content\">{contentDetails.name} </BreadcrumbsItem>\n\n            <Layout headerContainerClass=\"container-fluid\"\n                headerPaddingClass=\"header-padding-2\"\n                headerTop=\"visible\">\n                {/* breadcrumb */}\n                <Breadcrumb />\n                <div className=\"cart-main-area pt-90 pb-100\">\n                    <div className=\"container\">\n                        <p dangerouslySetInnerHTML={{ __html: contentDetails.pageContent }} ></p>\n                    </div>\n                </div>\n            </Layout>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        contentID: state.content.contentId\n    };\n};\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        setLoader: (value) => {\n            dispatch(setLoader(value));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Content));\n"],"sourceRoot":""}